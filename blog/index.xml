<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Blogs on Orianna</title>
    <link>https://github.com/yan-hui/yan-hui.github.io/blog/</link>
    <description>Recent content in Blogs on Orianna</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zn-Hans</language>
    <lastBuildDate>Wed, 05 Dec 2018 14:32:43 +0800</lastBuildDate>
    
	<atom:link href="https://github.com/yan-hui/yan-hui.github.io/blog/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Springcloud知识梳理</title>
      <link>https://github.com/yan-hui/yan-hui.github.io/blog/2018-12/springcloud%E7%9F%A5%E8%AF%86%E6%A2%B3%E7%90%86/</link>
      <pubDate>Wed, 05 Dec 2018 14:32:43 +0800</pubDate>
      
      <guid>https://github.com/yan-hui/yan-hui.github.io/blog/2018-12/springcloud%E7%9F%A5%E8%AF%86%E6%A2%B3%E7%90%86/</guid>
      <description>1. 核心知识 网关、服务发现注册、配置中心、链路追踪、负载均衡、熔断 1. 网关：路由转发+过滤器 比如： /api/v1/product/ 商品服务 /api/v1/order/ 订单服务 /api/v1/user/ 用户服务 根据不同的接口地址，分发到对应的服务 2. 注册服务与发现：调用和被调用方的信息维护 3. 配置中心：管理配置，动态更新 application.properties 4. 链路追踪：分析调用链路耗时 比如：下单-&amp;gt;查询商品服务获取商品价格-&amp;gt;查询用户信息-&amp;gt;保存数据库 5. 负载均衡：分发负载 6. 熔断：保护自己和被调用方 2. CA</description>
    </item>
    
    <item>
      <title>SpringBoot2.1知识梳理</title>
      <link>https://github.com/yan-hui/yan-hui.github.io/blog/2018-11/springboot2.1%E7%9F%A5%E8%AF%86%E6%A2%B3%E7%90%86/</link>
      <pubDate>Mon, 12 Nov 2018 16:03:36 +0800</pubDate>
      
      <guid>https://github.com/yan-hui/yan-hui.github.io/blog/2018-11/springboot2.1%E7%9F%A5%E8%AF%86%E6%A2%B3%E7%90%86/</guid>
      <description>1. war包启动配置方式 将启动类型改成war启动 &amp;lt;packaging&amp;gt;war&amp;lt;/packaging&amp;gt; 在&amp;lt;build&amp;gt;里面加入&amp;lt;finalName&amp;gt;springbootstudy&amp;lt;/finalName&amp;gt;,构建项目名称 修改启动类，继承SpringBootServletInitializer 类，重写configure方法： public class ClientApplication extends SpringBootServletInitializer { @Override protected SpringApplicationBuilder configure(SpringApplicationBuilder application) { return application.sources(ClientApplication.class); } public static void main(String[] args) { SpringApplication.run(ClientApplication.class, args); } } 2. 将指定文件/文件夹加入到springboot启</description>
    </item>
    
    <item>
      <title>正则表达式</title>
      <link>https://github.com/yan-hui/yan-hui.github.io/blog/2018-10/%E6%AD%A3%E5%88%99%E8%A1%A8%E8%BE%BE%E5%BC%8F/</link>
      <pubDate>Wed, 31 Oct 2018 10:36:23 +0800</pubDate>
      
      <guid>https://github.com/yan-hui/yan-hui.github.io/blog/2018-10/%E6%AD%A3%E5%88%99%E8%A1%A8%E8%BE%BE%E5%BC%8F/</guid>
      <description>·正则语法 1. \ 将下一个字符标记为特殊字符、文本、反向引用或八进制转义符 2. ^ 匹配字符串开始的位置，即以什么开始 3. $ 匹配字符串结尾的位置，即以什么结尾 4. * 零次或多次匹配前面的字符或者子表达式，例如，zo*匹配z和zoo,*等于{0,} 5. + 一次或多次匹配前面的字符或者子表达式，例如，zo+与zo和zoo匹配，但是与z不匹配，+ 等效于{1,} 6. ? 零次或一次匹配前面的字符或者子表达式，例如，do(es)?匹</description>
    </item>
    
    <item>
      <title>Redis</title>
      <link>https://github.com/yan-hui/yan-hui.github.io/blog/2018-10/redis/</link>
      <pubDate>Wed, 17 Oct 2018 15:47:34 +0800</pubDate>
      
      <guid>https://github.com/yan-hui/yan-hui.github.io/blog/2018-10/redis/</guid>
      <description>特点 redis支持数据的持久化，可将内存中的数据保存在磁盘中，重启的时候可以再次加载进行使用 支持key-value类型的数据，还提供list、set、zset、hash等数据结构的存储 支持数据的备份，即master-slave模式的数据备份 优势 性能极高，读的次数能达110000次/s，写的数据达81000次/s 丰富的数据类型。Redis支持二进制案例的Strings,Lists，Hashes,Se</description>
    </item>
    
    <item>
      <title>Test</title>
      <link>https://github.com/yan-hui/yan-hui.github.io/blog/2018-10/test/</link>
      <pubDate>Wed, 10 Oct 2018 17:11:55 +0800</pubDate>
      
      <guid>https://github.com/yan-hui/yan-hui.github.io/blog/2018-10/test/</guid>
      <description>这是测试</description>
    </item>
    
    <item>
      <title>搭建个人hugo网站</title>
      <link>https://github.com/yan-hui/yan-hui.github.io/blog/2018-10/%E6%90%AD%E5%BB%BA%E4%B8%AA%E4%BA%BAhugo%E7%BD%91%E7%AB%99/</link>
      <pubDate>Wed, 10 Oct 2018 17:11:55 +0800</pubDate>
      
      <guid>https://github.com/yan-hui/yan-hui.github.io/blog/2018-10/%E6%90%AD%E5%BB%BA%E4%B8%AA%E4%BA%BAhugo%E7%BD%91%E7%AB%99/</guid>
      <description>准备工作 前往hugo二进制文件下载 下载对应的hugo二进制文件（hugo或者hugo.exe） 本人在windows下安装的hugo_0.24.1_Windows-64bit.zip 解压到指定文件夹，将hugo.exe所在的目录的路径配置到环境变量path中 配置完成之后，使用cmd或者其它命令行操作工具，输入hugo version查看是否有版本信息 创建博客 选择一个目录，使用命令行工具输入hugo new site</description>
    </item>
    
  </channel>
</rss>